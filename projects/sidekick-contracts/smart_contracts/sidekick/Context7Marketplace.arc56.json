{
    "name": "Context7Marketplace",
    "structs": {},
    "methods": [
        {
            "name": "create_context",
            "args": [
                {
                    "type": "string",
                    "name": "ipfs_hash"
                },
                {
                    "type": "uint64",
                    "name": "price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "List a new AI context for sale",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "purchase_context",
            "args": [
                {
                    "type": "account",
                    "name": "seller"
                },
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Purchase an AI context",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "Context7 AI Marketplace Smart Contract",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 1,
                "bytes": 2
            }
        },
        "keys": {
            "global": {},
            "local": {
                "ipfs_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "aXBmc19oYXNo"
                },
                "price": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cHJpY2U="
                },
                "seller": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "c2VsbGVy"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        54,
                        91
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        135
                    ],
                    "errorMessage": "Price must be greater than 0"
                },
                {
                    "pc": [
                        125
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        57,
                        94,
                        119
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        326
                    ],
                    "errorMessage": "check self.ipfs_hash exists for account"
                },
                {
                    "pc": [
                        175
                    ],
                    "errorMessage": "check self.price exists for account"
                },
                {
                    "pc": [
                        73
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmAglpcGZzX2hhc2gFcHJpY2UxG0EAToICBOGt1J8EaA/6szYaAI4CACcAAiNDMRkURDEYRDYaARfAHDEWIglJOBAiEkSIAFqABBUffHVMULAiQzEZFEQxGEQ2GgE2GgKIABgiQzEZjQIACAADQv+8MRhEIkMxGBREIkOKAgCL/xdJRIv+VwIAMQAoTwJmMQApTwJmMQCABnNlbGxlcjEAZomKAgGL/iMpY0SL/zgHMgoSRIv/OAhLARJEi/84ADEAEkRJgQULgWQKTEsBCUsBCbGyCIv+sgcishAjsgGzsUmyCIAg/mhBA+cq8zuRsa65I66cBV9JsnMdC0C0I/cF/Zd0PGayByKyECOyAbOxsgiAIDD9zCMbnYw2Ca9/e7Hl74+WOkiwchNSje+9iG2WrkiEsgcishAjsgGzi/4jKGNEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}